[{"C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\index.tsx":"1","C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\reportWebVitals.ts":"2","C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\App.tsx":"3","C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\Hello.tsx":"4","C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\components\\Button\\Button.tsx":"5","C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\components\\Color\\Color.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":526,"mtime":1607782392404,"results":"10","hashOfConfig":"8"},{"size":123,"mtime":1607773375597,"results":"11","hashOfConfig":"8"},{"size":1685,"mtime":1607774653688,"results":"12","hashOfConfig":"8"},{"size":417,"mtime":1607783156060,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2052ar",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\index.tsx",[],["28","29"],"C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\reportWebVitals.ts",[],"C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\App.tsx",[],"C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\Hello.tsx",[],"C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\components\\Button\\Button.tsx",["30","31","32"],"import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\n// 按钮类型\r\nexport enum ButtonType {\r\n    Default = \"default\",\r\n    Primary = 'primary',\r\n    Success = \"success\",\r\n    Warning = 'warning',\r\n    Danger = \"danger\",\r\n    Info = \"info\",\r\n    Link = 'link'\r\n}\r\n\r\n// 按钮尺寸\r\nexport enum ButtonSize {\r\n    Large = 'large',\r\n    Normal = 'normal',\r\n    Small = 'small'\r\n}\r\n\r\n// Button基础属性\r\nexport interface BaseButtonProps {\r\n    type?: string,\r\n    size?: ButtonSize,\r\n    className?: string,\r\n    disabled?: boolean,\r\n    href?: string\r\n}\r\n\r\n\r\n// button属性\r\ntype NativeButtonProps = BaseButtonProps\r\n// a链接属性\r\ntype AnchorButtonProps = BaseButtonProps\r\n\r\n// export type ButtonTypes = Partial<NativeButtonProps & AnchorButtonProps>\r\n\r\nconst Button: React.FC<BaseButtonProps> = props => {\r\n    const {\r\n        className,\r\n        disabled,\r\n        size,\r\n        type,\r\n        children,\r\n        href,\r\n        ...restProps\r\n    } = props\r\n\r\n    const classes = classnames('tm-btn', {\r\n        [`tm-btn__${ type }`]: type,\r\n        [`tm-btn__${ size }`]: size,\r\n        'disabled': type === ButtonType.Link && disabled\r\n    })\r\n\r\n    if(type === ButtonType.Link) {\r\n        return (\r\n            <a href={href} className={classes}>\r\n                { children }\r\n            </a>\r\n        )\r\n    } else {\r\n        return (\r\n            <button\r\n                className={classes}\r\n                disabled={disabled}\r\n            >\r\n                { children }\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n    disabled: false,\r\n    type: ButtonType.Default,\r\n    size: ButtonSize.Normal\r\n}\r\n\r\nexport default Button","C:\\Users\\wwz\\Desktop\\FE\\tmagic\\src\\components\\Color\\Color.tsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":33,"column":6,"nodeType":"39","messageId":"40","endLine":33,"endColumn":23},{"ruleId":"37","severity":1,"message":"41","line":35,"column":6,"nodeType":"39","messageId":"40","endLine":35,"endColumn":23},{"ruleId":"37","severity":1,"message":"42","line":47,"column":12,"nodeType":"39","messageId":"40","endLine":47,"endColumn":21},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'NativeButtonProps' is defined but never used.","Identifier","unusedVar","'AnchorButtonProps' is defined but never used.","'restProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]